{"version":3,"sources":["config.js","hash.js","Components/Home.js","Components/Artists.js","Components/Menu.js","Components/Tracks.js","App.js","serviceWorker.js","index.js"],"names":["scopes","hash","window","location","substring","split","reduce","initial","item","console","log","parts","decodeURIComponent","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Home","props","classes","Container","className","Grid","container","direction","justify","alignItems","xs","Typography","variant","align","Button","onClick","handleClick","User","usersData","items","count","artistData","map","artist","fontWeight","m","name","href","external_urls","spotify","target","rel","src","images","url","alt","SimpleMenu","React","useState","anchorEl","setAnchorEl","IconButton","aria-controls","aria-haspopup","event","currentTarget","style","fontSize","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","logOut","UserTracks","tracksData","artists","album","App","token","state","getUserTopArtist","setState","request","a","axios","get","params","limit","time_range","headers","Authorization","then","res","userData","data","no_data","range","bind","_token","access_token","this","Fragment","CssBaseline","join","Artists","Component","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.18484d31.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// Replace with your app's client ID, redirect URI and desired scopes\nexport const clientId = \"2ed02617f4fb45588ab05522bf1f18db\";\nexport const redirectUri = \"https://ggmele1.github.io/spotify-stats\";\nexport const scopes = [\n    \"user-top-read\",\n    \"user-read-currently-playing\",\n    \"user-read-playback-state\",\n    \"user-top-read\",\n    \"playlist-read-collaborative\",\n];\n","// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function (initial, item) {\n    console.log(\"this is initial:\", initial);\n    console.log(\"this is item\", item);\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n      console.log(\"initial after if: \", initial[parts[0]]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nexport default hash;\n","import React from \"react\";\nimport \"../App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Button, Container, Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst Home = (props) => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <div className={classes.root}>\n        <Grid\n          container\n          spacing={3}\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={12}>\n            <Typography variant=\"h4\" align=\"left\" className=\"heading\">\n              View your personal Spotify stats.\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"center\"\n          >\n            <Button\n              className=\"reg-button\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => props.handleClick(\"artists\")}\n            >\n              View Artists\n            </Button>\n            <Button\n              className=\"reg-button\"\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => props.handleClick(\"tracks\")}\n            >\n              View Tracks\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </Container>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport \"./Data.css\";\nimport \"../App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Container, Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst User = (props) => {\n  const classes = useStyles();\n  const usersData = props.items;\n  let count = 1;\n  const artistData = usersData.map((artist) => (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={6}\n        className=\"grid\"\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item xs={3} className=\"artist-info\">\n          <Grid item xs={3}>\n            <Typography variant=\"h5\" align=\"left\" className=\"count\">\n              #{count++}\n            </Typography>\n          </Grid>\n          <Grid item xs={3} fontWeight=\"fontWeightBold\" m={1}>\n            <Typography variant=\"h4\" className=\"artistName\">\n              {artist.name}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid item xs={6}>\n          <a\n            href={artist.external_urls.spotify}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img src={artist.images[0].url} alt=\"artist\" className=\"image\" />\n          </a>\n        </Grid>\n      </Grid>\n    </div>\n  ));\n  return (\n    <Container>\n      <div>\n        <Typography\n          variant=\"h4\"\n          align=\"center\"\n          className=\"heading heading-margin\"\n        >\n          Your Top 10 Favorite Artist\n        </Typography>\n        {artistData}\n      </div>\n    </Container>\n  );\n};\nexport default User;\n","import React from \"react\";\nimport { Menu, MenuItem, IconButton } from \"@material-ui/core\"\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nexport default function SimpleMenu(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        onClick={handleClick}\n      >\n        <MoreVertIcon color=\"primary\" style={{ fontSize: 50 }} />\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={() => props.handleClick(\"artists\")}>\n          View Artists\n        </MenuItem>\n        <MenuItem onClick={() => props.handleClick(\"tracks\")}>\n          My Tracks\n        </MenuItem>\n        <MenuItem onClick={() => props.logOut()}>Logout</MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Data.css\";\nimport \"../App.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Container, Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst UserTracks = (props) => {\n  const classes = useStyles();\n  const usersData = props.items;\n  let count = 1;\n  const tracksData = usersData.map((artist) => (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={6}\n        className=\"grid\"\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"flex-start\"\n      >\n        <Grid item xs={3} className=\"artist-info\">\n          <Grid item xs={3}>\n            <Typography variant=\"h5\" align=\"left\" className=\"count\">\n              #{count++}\n            </Typography>\n          </Grid>\n          <Grid item xs={3} fontWeight=\"fontWeightBold\" m={1}>\n            <Typography variant=\"h5\" className=\"artistName\">\n              {artist.name}\n            </Typography>\n            <Typography variant=\"h6\" className=\"artistName\">\n              {artist.artists[0].name}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Grid item xs={6}>\n          <a\n            href={artist.external_urls.spotify}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img\n              src={artist.album.images[0].url}\n              alt=\"artist\"\n              className=\"image\"\n            />\n          </a>\n        </Grid>\n      </Grid>\n    </div>\n  ));\n  return (\n    <Container>\n      <div>\n        <Typography\n          variant=\"h4\"\n          align=\"center\"\n          className=\"heading heading-margin\"\n        >\n          Your Top Favorite Tracks\n        </Typography>\n        {tracksData}\n      </div>\n    </Container>\n  );\n};\n\nexport default UserTracks;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config\";\nimport hash from \"./hash\";\nimport Home from \"./Components/Home\";\nimport Artists from \"./Components/Artists\";\nimport Menu from \"./Components/Menu\";\nimport UserTracks from \"./Components/Tracks\";\nimport \"./App.css\";\nimport { Typography, CssBaseline, Button, Container } from \"@material-ui/core\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      request: \"\",\n      range: \"medium\",\n      items: [\n        {\n          artists: [{ name: \"\" }],\n          name: \"\",\n          album: {\n            images: [{ url: \"\" }],\n          },\n          images: [{ url: \"\" }],\n          external_urls: { spotify: \"\" },\n        },\n      ],\n      no_data: true,\n    };\n    this.getUserTopArtist = this.getUserTopArtist.bind(this);\n  }\n\n  handleClick = (event) => {\n    const { token } = this.state;\n    // this.setState({range})\n    this.getUserTopArtist(token, event);\n  };\n\n  logOut = () => {\n    this.setState({ token: null });\n  };\n\n  componentDidMount() {\n    // Sets token\n    let _token = hash.access_token;\n    if (_token) {\n      this.setState({\n        token: _token,\n      });\n      console.log(\"componentDidMount RAN\");\n    }\n  }\n\n  getUserTopArtist = async (token, request) => {\n    console.log(\"axios.get RAN\");\n    await axios\n      .get(`https://api.spotify.com/v1/me/top/${request}`, {\n        params: { limit: 50, time_range: \"long_term\" },\n        headers: {\n          Authorization: \"Bearer \" + token,\n        },\n      })\n      .then((res) => {\n        const userData = res.data;\n        console.log(\"getUserTopArtist .THEN\");\n        this.setState({\n          items: userData.items,\n          no_data: false,\n          request: request,\n        });\n        console.log(userData.items);\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Container className=\"main\">\n          {this.state.token && (\n            <div className=\"menu\">\n              <Menu logOut={this.logOut} handleClick={this.handleClick} />\n            </div>\n          )}\n          <div className=\"App\">\n            <header className=\"App-header\">\n              {!this.state.token && (\n                <div className=\"login\">\n                  <div>\n                    <Typography variant=\"h4\" align=\"left\" className=\"heading\">\n                      Login with your Spotify!\n                    </Typography>\n                  </div>\n                  <div className=\"login-button\">\n                    <Button\n                      variant=\"contained\"\n                      className=\"login-button\"\n                      color=\"primary\"\n                      href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                        \"%20\"\n                      )}&response_type=token&show_dialog=true`}\n                    >\n                      <Typography>Login</Typography>\n                    </Button>\n                  </div>\n                </div>\n              )}\n              {this.state.token && this.state.no_data && (\n                <Home handleClick={this.handleClick} />\n              )}\n              {this.state.token &&\n                !this.state.no_data &&\n                this.state.request === \"artists\" && (\n                  <Artists\n                    handleClick={this.handleClick}\n                    items={this.state.items}\n                    className=\"user\"\n                  />\n                )}\n              {this.state.token &&\n                !this.state.no_data &&\n                this.state.request === \"tracks\" && (\n                  <UserTracks items={this.state.items} className=\"user\" />\n                )}\n            </header>\n          </div>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}